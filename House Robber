// robber planning to rob houses along a street. Each house has a certain amount of money stashed, 
the only constraint stopping you from robbing each of them is that adjacent houses have security systems connected and 
it will automatically contact the police if two adjacent houses were broken into on the same night

SOLUTION://Dynamic programming apporach has been used to solve this problem

class Solution {
    public int rob(int[] nums) {
        int dp[]=new int[nums.length];       // dp Array to perform tabulation
        if(nums.length==1)
            return nums[0]; 
            dp[0]=nums[0];                  //Base Case
            dp[1]=Math.max(nums[0],nums[1]);
            for(int i=2;i<nums.length;i++)
                dp[i] =Math.max( dp[i-1],(dp[i-2]+nums[i]));              // Returining max    
                                return dp[nums.length-1];
}
}
